{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAC5BD,SAASC,cAAc,yBAEtCF,EAAKM,iBAAiB,UA+CtB,SAAgCC,GAC9BA,EAAEC,iBAlBJ,WACE,IAAK,IAAIC,EAAI,EAAGA,GAAKC,EAAQD,GAAK,EAChCE,EAAcF,EAAGG,GACdC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALG,MACjBC,EAAApB,GAASqB,OAAOC,QACd,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAGjDM,OAAM,SAAAR,G,IAAGC,EAAQD,EAARC,SAAUQ,EAAKT,EAALG,MAClBC,EAAApB,GAASqB,OAAOK,QACd,sBAAqCH,OAAfN,EAAS,QAAYM,OAANE,EAAM,M,IAGjDX,GAASa,C,CAOXC,E,IAjDF1B,EAAKM,iBAAiB,UAOtB,WACEM,GAAST,EAAWwB,MACpBF,GAAQrB,EAAUuB,MAClBjB,GAAUL,EAAYsB,K,IARxB,IAAIf,EAAQ,KACRa,EAAO,KACPf,EAAS,KASb,SAASC,EAAcI,EAAUa,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEf,WAAUE,MAAAW,IAGpBG,EAAO,CAAEhB,WAAUE,MAAAW,G,GAEpBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\nconst inputStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\nconst button = document.querySelector('button[type=\"submit\"]');\n\nform.addEventListener('submit', submitForCreatePromise);\nform.addEventListener('change', setOptions);\n\nlet delay = null;\nlet step = null;\nlet amount = null;\n// let position = 1;\n\nfunction setOptions() {\n  delay = +inputDelay.value;\n  step = +inputStep.value;\n  amount = +inputAmount.value;\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject;\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction startCraetPromise() {\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n}\n\nfunction submitForCreatePromise(e) {\n  e.preventDefault();\n\n  startCraetPromise();\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","addEventListener","e","preventDefault","i","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","$ce04d3a99e08e73b$var$delay","then","param","position","delay2","delay","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$startCraetPromise","value","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.5e0e61d8.js.map"}