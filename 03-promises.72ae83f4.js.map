{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAC5BD,SAASC,cAAc,yBAEtCF,EAAKM,iBAAiB,UA+CtB,SAAgCC,GAC9BA,EAAEC,iBAlBJ,WACE,IAAK,IAAIC,EAAI,EAAGA,GAAKC,EAAQD,GAAK,EAChCE,EAAcF,EAAGG,GACdC,MAAK,EAACC,SAAEA,EAAUC,MAAAC,MACjBC,EAAAnB,GAASoB,OAAOC,QACd,uBAAqBL,QAAiBE,MAAU,IAGnDI,OAAM,EAACN,SAAEA,EAAUC,MAAAM,MAClBJ,EAAAnB,GAASoB,OAAOI,QACd,sBAAoBR,QAAeO,MAAU,IAGnDT,GAASW,C,CAOXC,E,IAjDFxB,EAAKM,iBAAiB,UAOtB,WACEM,GAAST,EAAWsB,MACpBF,GAAQnB,EAAUqB,MAClBf,GAAUL,EAAYoB,K,IARxB,IAAIb,EAAQ,KACRW,EAAO,KACPb,EAAS,KASb,SAASC,EAAcG,EAAUY,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EAEFF,EAAQ,C,SAAEd,EAAUC,MAAAW,IAGpBG,EAAO,C,SAAEf,EAAUC,MAAAW,GAAQ,GAE5BA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\nconst inputStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\nconst button = document.querySelector('button[type=\"submit\"]');\n\nform.addEventListener('submit', submitForCreatePromise);\nform.addEventListener('change', setOptions);\n\nlet delay = null;\nlet step = null;\nlet amount = null;\n// let position = 1;\n\nfunction setOptions() {\n  delay = +inputDelay.value;\n  step = +inputStep.value;\n  amount = +inputAmount.value;\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject;\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction startCraetPromise() {\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n}\n\nfunction submitForCreatePromise(e) {\n  e.preventDefault();\n\n  startCraetPromise();\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$inputDelay","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","addEventListener","e","preventDefault","i","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","$47d4ff9957288465$var$delay","then","position","delay","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure","$47d4ff9957288465$var$step","$47d4ff9957288465$var$startCraetPromise","value","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.72ae83f4.js.map"}